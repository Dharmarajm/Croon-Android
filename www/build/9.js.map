{"version":3,"sources":["../../src/pages/audio-modal/audio-modal.module.ts","../../src/pages/audio-modal/audio-modal.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AudioModalPage } from './audio-modal';\n\n@NgModule({\n  declarations: [\n    AudioModalPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AudioModalPage),\n  ],\n})\nexport class AudioModalPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/audio-modal/audio-modal.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { ViewController } from 'ionic-angular';\nimport { Media, MediaObject } from '@ionic-native/media';\nimport { File,FileEntry, IFile } from '@ionic-native/file';\nimport { Platform } from 'ionic-angular';\n\n@IonicPage()\n@Component({\n  selector: 'page-audio-modal',\n  templateUrl: 'audio-modal.html',\n})\nexport class AudioModalPage {\n\n  recording: boolean = false;\n  filePath: string;\n  fileName: string;\n  audio: MediaObject;\n  audioList: any[] = [];\n  sec:number = 0;\n  time:any =\"00:00:00\";\n  interval:any;\n  zero:any;\n  show:any;\n  isenabled:boolean=true;\n  audioTrack:boolean = false;\n  recordStart:boolean= false;\n  Stop:boolean = false;\n  Pause:boolean =false;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,public viewCtrl:ViewController,private media: Media,private file: File,public platform: Platform){\n      this.show=3;\n      platform.registerBackButtonAction(() => {       \n       this.viewCtrl.dismiss();\n      }, 0);      \n   }\n\n    ionViewDidLoad() {\n      console.log('ionViewDidLoad AudioModalPage');\n    }\n    \n    public closeModal(){\n      this.viewCtrl.dismiss();\n    }\n\n    getAudioList() {\n      if(localStorage.getItem(\"audiolist\")) {\n        this.audioList = JSON.parse(localStorage.getItem(\"audiolist\"));\n      }\n    }\n\n    ionViewWillEnter() {\n      this.getAudioList();\n    }\n\n    playAudio(file,idx) {\n      if (this.platform.is('ios')) {\n        this.filePath = this.file.documentsDirectory.replace(/file:\\/\\//g, '') + file;\n        this.audio = this.media.create(this.filePath);\n      } else if (this.platform.is('android')) {\n        this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + file;\n        this.audio = this.media.create(this.filePath);\n      }\n      this.audio.play();\n      this.audio.setVolume(1.0);\n      //this.audio.setRate(2.0)\n    }\n\n    secondsToTime(secs)\n    {\n        var hours = Math.floor(secs / (60 * 60));\n        var divisor_for_minutes = secs % (60 * 60);\n        var minutes = Math.floor(divisor_for_minutes / 60);\n        var divisor_for_seconds = divisor_for_minutes % 60;\n        var seconds = Math.ceil(divisor_for_seconds);\n        if(seconds < 10){\n          this.zero = \"0\" + seconds;\n          seconds = this.zero ;\n        }\n        if(minutes < 10){\n          this.zero = \"0\" + minutes;\n          minutes = this.zero ;\n        }\n        if(hours < 10){\n          this.zero = \"0\" + hours;\n          hours = this.zero ;\n        }\n        var obj = hours + \":\" + minutes + \":\" + seconds;\n        return obj;\n    }\n\n    start(){  \n      \n\n       /* if (this.platform.is('ios')) {\n            this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.3gp';\n              this.filePath = this.file.documentsDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n              this.audio = this.media.create(this.filePath);\n        } else if (this.platform.is('android')) {\n            this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.3gp';\n              this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n              this.audio = this.media.create(this.filePath);\n        }*/\n            if(this.audioTrack==false && this.recordStart==false){\n              this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.mp3';\n              \n             this.file.createFile(this.file.externalDataDirectory,this.fileName, true).then(() => {\n                this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n                this.audio = this.media.create(this.filePath);\n                this.audioTrack=true;\n                this.Stop=true;\n                this.Pause=true;\n                this.audio.startRecord();\n\n                this.audio.onSuccess.subscribe(() => console.log('Action is successful'));\n\n                this.audio.onError.subscribe(error => console.log('Error!', error));\n                this.recording = true;\n                this.show = 1;      \n                //this.isenabled=false; \n                this.time =\"00:00:00\";\n                this.sec=0;   \n                this.interval =setInterval(() => {\n                this.sec +=1 ;\n                this.time= this.secondsToTime(this.sec)\n                }, 1000);\n                this.recording = true; \n             }).catch(e => console.log(e));\n            }else{\n              if(this.recordStart==false){\n                 this.audioTrack=false;\n                 this.Pause=false;\n                 this.recordStart=true;\n                 this.audio.pauseRecord();\n                 clearInterval(this.interval);\n                 \n               }else{\n                 this.audioTrack=true;\n                 this.recordStart=false;\n                 this.Pause=true;\n                 this.audio.resumeRecord();\n                 this.interval =setInterval(() => {\n                  this.sec +=1 ;\n                  this.time= this.secondsToTime(this.sec)\n                 }, 1000);\n                 \n               }\n            }       \n    }\n\n    stop(){ \n        this.isenabled=false; \n        this.Stop=false;  \n        this.show = 2;     \n        clearInterval(this.interval);\n        this.audio.stopRecord();\n        this.audio.release();\n        /*let data = { filename: this.fileName };\n        this.audioList.push(data);\n        localStorage.setItem(\"audiolist\", JSON.stringify(this.audioList));\n        this.recording = false;\n        this.getAudioList();      */  \n    }\n\n    confirm(){\n        /*let data = { filename: this.fileName };\n        this.audioList.push(data);\n        localStorage.setItem(\"audiolist\", JSON.stringify(this.audioList));\n        this.recording = false;\n        this.getAudioList();  */\n        localStorage.setItem(\"audiolist\",JSON.stringify(this.filePath));\n        localStorage.setItem(\"fileNameaudio\",JSON.stringify(this.fileName));\n        this.viewCtrl.dismiss();\n\n    }\n\n    startRecord() {\n        if (this.platform.is('ios')) {\n          this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.3gp';\n          this.filePath = this.file.documentsDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n          this.audio = this.media.create(this.filePath);\n        } else if (this.platform.is('android')) {\n          this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.3gp';\n          this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n          this.audio = this.media.create(this.filePath);\n        }\n        this.audio.startRecord();\n        this.recording = true;\n    }\n\n\n\n    stopRecord() {\n     this.audio.stopRecord();\n     let data = { filename: this.fileName };\n     this.audioList.push(data);\n     localStorage.setItem(\"audiolist\", JSON.stringify(this.audioList));\n     this.recording = false;\n     this.getAudioList();\n    }\n\n\n\n//     getAudioList() {\n//       if(localStorage.getItem(\"audiolist\")) {\n//         this.audioList = JSON.parse(localStorage.getItem(\"audiolist\"));\n//         console.log(this.audioList);\n//       }\n//     }\n\n\n//     ionViewWillEnter() {\n//      this.getAudioList();\n//     }\n\n//     startRecord() {\n//       if (this.platform.is('ios')) {\n//         this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.mp3';\n//         this.filePath = this.file.documentsDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n//         this.audio = this.media.create(this.filePath);\n//       } else if (this.platform.is('android')) {\n//         this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.mp3';\n//         this.file.createFile(this.file.externalDataDirectory,this.fileName, true).then(() => {\n//           this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n//           console.log(this.filePath)\n//           this.audio = this.media.create(this.filePath);\n//           console.log(this.audio)\n//           this.audio.startRecord();\n//           console.log(this.audio.startRecord())\n//           this.recording = true;\n//         })\n        \n//       }\n//     }\n\n\n\n//     stopRecord() {\n//       this.audio.stopRecord();\n//       this.audio.release();\n//       console.log(this.audio.stopRecord())\n//       let data = { filename: this.fileName };\n//       this.audioList.push(data);\n//       localStorage.setItem(\"audiolist\", JSON.stringify(this.audioList));\n//       this.recording = false;\n//       this.getAudioList();\n//     }\n\n\n//     playAudio(file,idx) {\n//       if (this.platform.is('ios')) {\n//         this.filePath = this.file.documentsDirectory.replace(/file:\\/\\//g, '') + file;\n//         this.audio = this.media.create(this.filePath);\n//       } else if (this.platform.is('android')) {\n//         this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + file;\n//         console.log(this.filePath)\n//         this.audio = this.media.create(this.filePath);\n//         console.log(this.audio)\n//       }\n//       this.audio.play();\n//       console.log(this.audio.play())\n//       this.audio.setVolume(0.8);\n//     }\n\n\n// //sec:number = 0;\n// //time:any =\"00:00:00\";\n// //interval:any;\n// //ngOnInit () {\n// //}\n\n\n// ss:any;\n// secondsToTime(secs)\n// {\n// var hours = Math.floor(secs / (60 * 60));\n\n// var divisor_for_minutes = secs % (60 * 60);\n// var minutes = Math.floor(divisor_for_minutes / 60);\n\n// var divisor_for_seconds = divisor_for_minutes % 60;\n// var seconds = Math.ceil(divisor_for_seconds);\n\n// if(seconds < 10){\n//   this.ss = \"0\" + seconds;\n//   seconds = this.ss ;\n// }\n// if(minutes < 10){\n//   this.ss = \"0\" + minutes;\n//   minutes = this.ss ;\n// }\n// if(hours < 10){\n//   this.ss = \"0\" + hours;\n//   hours = this.ss ;\n// }\n\n// var obj = hours + \":\" + minutes + \":\" + seconds;\n// return obj;\n// }\n\n// start(){\n// this.interval =setInterval(() => {\n// this.sec +=1 ;\n// this.time= this.secondsToTime(this.sec)\n// }, 500);\n\n\n//  if (this.platform.is('ios')) {\n//         this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.mp3';\n//         this.filePath = this.file.documentsDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n//         this.audio = this.media.create(this.filePath);\n//       } else if (this.platform.is('android')) {\n//         this.fileName = 'record'+new Date().getDate()+new Date().getMonth()+new Date().getFullYear()+new Date().getHours()+new Date().getMinutes()+new Date().getSeconds()+'.mp3';\n//         this.filePath = this.file.externalDataDirectory.replace(/file:\\/\\//g, '') + this.fileName;\n//         this.audio = this.media.create(this.filePath);\n//       }\n//       this.audio.startRecord();\n//       console.log(this.audio.startRecord())\n//       this.recording = true;\n\n\n\n// }\n\n// stop(){\n//    clearInterval(this.interval);\n//     this.audio.stopRecord();\n//     console.log(this.audio.stopRecord())\n//     let data = { filename: this.fileName };\n//     this.audioList.push(data);\n//     localStorage.setItem(\"audiolist\", JSON.stringify(this.audioList));\n//     this.recording = false;\n//     this.getAudioList();\n//     this.time=\"00:00:00\";\n\n// }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/audio-modal/audio-modal.ts"],"sourceRoot":""}